---
title: Product Management Rules
description: Defines standards for managing product documentation and tasks.
globs: .product/**/*
---

# Product Management Guidelines

## Directory Structure
```plaintext
.product/
├── architecture.mermaid    # System architecture diagrams
├── project_structure.yml   # Project structure definition
├── kanban.md              # Task tracking
└── tasks/                 # Detailed task specifications
```

## Task Management

### Kanban Structure
```markdown
# Kanban

## 📋 To Do
- [ ] TASK-001: Implement base configuration system
  - Priority: High
  - Points: 3
  - Dependencies: None

## 🏃 In Progress
- [ ] TASK-002: Setup development environment
  - Priority: High
  - Points: 2
  - Started: 2024-03-20

## ✅ Done
- [x] TASK-003: Initial project setup
  - Completed: 2024-03-19
  - Outcome: Basic structure created
```

### Task Specification Format
```markdown
# TASK-001: Implement Base Configuration System

## Overview
Brief description of what needs to be done and why.

## Requirements
- [ ] Requirement 1
- [ ] Requirement 2
- [ ] Requirement 3

## Technical Notes
- Implementation details
- Architecture considerations
- Dependencies

## Validation
- What needs to be tested
- Expected outcomes
- Performance criteria
```

## Project Structure Management

### Structure Validation
- All changes to `project_structure.yml` must be reviewed
- Structure must align with architecture diagrams
- Changes must be documented in changelog

### Architecture Documentation
- Use Mermaid diagrams for visualization
- Keep diagrams focused and modular
- Include component relationships

## Version Control Integration

### Branch Strategy
```plaintext
main
├── task/001-config-system
├── task/002-dev-env
└── hotfix/003
```

### Commit Messages
```
task(001): implement config system

- Add config module
- Setup validation
- Add tests

Related to: TASK-001
```

## Task Lifecycle

1. **Creation**
   - Add task to kanban.md
   - Create task specification in tasks/
   - Define requirements and validation criteria

2. **Implementation**
   - Create feature branch
   - Update documentation as needed
   - Write tests

3. **Review**
   - Code review
   - Documentation review
   - Update architecture if needed

4. **Completion**
   - Merge to main
   - Update kanban.md
   - Document outcome

## Integration with Rules

### Architecture Rules
- Tasks must comply with `.cursor/rules/architecture-rules.mdc`
- Update architecture diagrams when needed

### Documentation Rules
- Follow `.cursor/rules/documentation-rules.mdc`
- Keep technical documentation current

### Testing Rules
- Adhere to `.cursor/rules/testing-rules.mdc`
- Include test cases in specifications 